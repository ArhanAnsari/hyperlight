lib-suffix := if os() == "windows" { ".dll" } else { "" }
bin-suffix := if os() == "windows" { ".exe" } else { ".out" }
test-command := if os() == "windows" { "./scripts/test-command.bat" } else { "LD_LIBRARY_PATH=../../target/debug ./bin/test_c.out" }
# TODO: use UMDH here for windows?
# https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/umdh
valgrind-command := if os() == "windows" { "echo 'valgrind not supported on windows'" } else { "LD_LIBRARY_PATH=../../target/debug valgrind --leak-check=full --error-exitcode=1 -s --suppressions=./minimal.supp ./bin/test_c.out --log-visible info --show-stderr" }
valgrind-command-gen-suppressions := if os() == "windows" { "echo 'valgrind not supported on windows'" } else { "LD_LIBRARY_PATH=../../target/debug valgrind --leak-check=full -s --error-exitcode=1 --show-leak-kinds=all --gen-suppressions=all --suppressions=./minimal.supp --log-file=minimalraw.log ./bin/test_c.out" }

clang-checks := if os() == "windows" { "-Werror -Wunused-variable -Werror=sign-compare -Wincompatible-pointer-types" } else { "-Wall -Werror -Wunused-variable -Werror=sign-compare -Wincompatible-pointer-types" }
default-target:= "debug"

build target=default-target:
    cargo build --verbose --profile={{ if target == "debug" {"dev"} else { target } }}

build-test-rust target=default-target:  (build target)
    cargo test --verbose --profile={{ if target == "debug" {"dev"} else { target } }}

build-tests-capi target=default-target: (build target)
    clang \
    {{ clang-checks }} \
    tests_capi/*.c \
    tests_capi/munit/munit.c \
    -Iinclude \
    -o bin/test_c{{bin-suffix}} \
    -l hyperlight_host{{lib-suffix}} \
    -L../../target/{{target}}

run-tests-capi target=default-target: (build-tests-capi target)
    {{test-command}}

valgrind-tests-capi target=default-target: (build-tests-capi target)
    {{valgrind-command}}

valgrind-tests-capi-gen-suppressions target=default-target: (build-tests-capi target)
    {{valgrind-command-gen-suppressions}}
