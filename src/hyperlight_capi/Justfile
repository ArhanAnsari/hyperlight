lib-suffix := if os() == "windows" { ".dll" } else { "" }
bin-suffix := if os() == "windows" { ".exe" } else { ".out" }
clang-checks := if os() == "windows" { "-Wstrict-prototypes -Wwrite-strings -Wbad-function-cast -Wignored-qualifiers -Wformat-security -Wformat -Wempty-body -Wcast-align -Wmissing-declarations -Wpointer-arith -Werror -Wunused-variable -Werror=sign-compare -Wincompatible-pointer-types" } else { "-Wall -Werror -Wunused-variable -Werror=sign-compare -Wincompatible-pointer-types" }
valgrind-command := if os() == "windows" { "echo 'valgrind not supported on windows'" } else { "./scripts/valgrind-command.sh" }
test-command := if os() == "windows" { "./scripts/test-command.bat" } else { "./scripts/test-command.sh" }
set windows-shell := ["pwsh.exe", "-NoLogo", "-Command"]
set fallback

default-target:= "debug"

build target=default-target:
    just build-rust {{target}}

build-test-rust target=default-target:  (build target)
    # tracing tests cannot run with other tests
    cargo test --profile={{ if target == "debug" {"dev"} else { target } }} -- --skip test_trace
    cargo test --profile={{ if target == "debug" {"dev"} else { target } }} test_trace 

build-tests-capi target=default-target: (build target)
    clang \
    {{ clang-checks }} \
    {{ if target == "debug" { "-D DEBUG" } else { "-O3" } }} \
    tests_capi/*.c \
    tests_capi/munit/munit.c \
    -Iinclude \
    -I../hyperlight_host/include \
    -o bin/test_c{{bin-suffix}} \
    -l hyperlight_capi{{lib-suffix}} \
    -L../../target/{{target}} \

run-tests-capi target=default-target: (build-tests-capi target)
    {{test-command}} {{target}}

valgrind-tests-capi target=default-target: (build-tests-capi target)
    {{valgrind-command}} {{target}}
