[package]
name = "hyperlight_capi"
version = "0.7.1"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
# Cargo will complain about this with the message
# warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
# However this should not be removed and placed in the workspace Cargo.toml file
# see https://github.com/rust-lang/cargo/issues/8264 for the reason why
[profile.release]         
panic = 'abort'         # Always abort, this is mainly to ensure that panics cannot unwind across FFI boundaries.

[lib]
# https://docs.rust-embedded.org/book/interoperability/rust-with-c.html
name = "hyperlight_capi"
crate-type = ["cdylib"]
bench = false # see https://bheisler.github.io/criterion.rs/book/faq.html#cargo-bench-gives-unrecognized-option-errors-for-valid-command-line-options

[dependencies]
hyperlight_host = { path = "../hyperlight_host", version = "0.7.1", registry = "hyperlight_packages" }
hyperlight_common = { path = "../hyperlight_common", version = "0.7.1", registry = "hyperlight_packages" }
tracing-subscriber = { version = "0.3.17", features = ["json"] }
anyhow = { version = "1.0.72" }
cfg-if = { version = "1.0.0" }
flatbuffers = "23.5.26"
libc = { version = "0.2.148" }
rand = { version = "0.8.5" }
tracing = { version = "0.1.37", features = ["log"] }
uuid = { version = "1.4.1", features = ["v4"] }
bitflags = "2.4.0"
log ="0.4.14"

[target.'cfg(unix)'.dependencies]
mshv-bindings = { workspace = true }

[build-dependencies]
anyhow = { version = "1.0.72" }
cbindgen = { version = "0.26.0", default-features = false}

[dev-dependencies]
hyperlight_host = { path = "../hyperlight_host" }
hyperlight_testing = { path = "../hyperlight_testing" }
