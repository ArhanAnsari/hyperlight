// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Hyperlight.Generated
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Parameter : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Parameter GetRootAsParameter(ByteBuffer _bb) { return GetRootAsParameter(_bb, new Parameter()); }
  public static Parameter GetRootAsParameter(ByteBuffer _bb, Parameter obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Parameter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Hyperlight.Generated.ParameterValue ValueType { get { int o = __p.__offset(4); return o != 0 ? (Hyperlight.Generated.ParameterValue)__p.bb.Get(o + __p.bb_pos) : Hyperlight.Generated.ParameterValue.NONE; } }
  public TTable? Value<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public Hyperlight.Generated.hlint ValueAshlint() { return Value<Hyperlight.Generated.hlint>().Value; }
  public Hyperlight.Generated.hluint ValueAshluint() { return Value<Hyperlight.Generated.hluint>().Value; }
  public Hyperlight.Generated.hllong ValueAshllong() { return Value<Hyperlight.Generated.hllong>().Value; }
  public Hyperlight.Generated.hlulong ValueAshlulong() { return Value<Hyperlight.Generated.hlulong>().Value; }
  public Hyperlight.Generated.hlfloat ValueAshlfloat() { return Value<Hyperlight.Generated.hlfloat>().Value; }
  public Hyperlight.Generated.hldouble ValueAshldouble() { return Value<Hyperlight.Generated.hldouble>().Value; }
  public Hyperlight.Generated.hlstring ValueAshlstring() { return Value<Hyperlight.Generated.hlstring>().Value; }
  public Hyperlight.Generated.hlbool ValueAshlbool() { return Value<Hyperlight.Generated.hlbool>().Value; }
  public Hyperlight.Generated.hlvecbytes ValueAshlvecbytes() { return Value<Hyperlight.Generated.hlvecbytes>().Value; }

  public static Offset<Hyperlight.Generated.Parameter> CreateParameter(FlatBufferBuilder builder,
      Hyperlight.Generated.ParameterValue value_type = Hyperlight.Generated.ParameterValue.NONE,
      int valueOffset = 0) {
    builder.StartTable(2);
    Parameter.AddValue(builder, valueOffset);
    Parameter.AddValueType(builder, value_type);
    return Parameter.EndParameter(builder);
  }

  public static void StartParameter(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddValueType(FlatBufferBuilder builder, Hyperlight.Generated.ParameterValue valueType) { builder.AddByte(0, (byte)valueType, 0); }
  public static void AddValue(FlatBufferBuilder builder, int valueOffset) { builder.AddOffset(1, valueOffset, 0); }
  public static Offset<Hyperlight.Generated.Parameter> EndParameter(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 6);  // value
    return new Offset<Hyperlight.Generated.Parameter>(o);
  }
  public ParameterT UnPack() {
    var _o = new ParameterT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ParameterT _o) {
    _o.Value = new Hyperlight.Generated.ParameterValueUnion();
    _o.Value.Type = this.ValueType;
    switch (this.ValueType) {
      default: break;
      case Hyperlight.Generated.ParameterValue.hlint:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlint>().HasValue ? this.Value<Hyperlight.Generated.hlint>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hluint:
        _o.Value.Value = this.Value<Hyperlight.Generated.hluint>().HasValue ? this.Value<Hyperlight.Generated.hluint>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hllong:
        _o.Value.Value = this.Value<Hyperlight.Generated.hllong>().HasValue ? this.Value<Hyperlight.Generated.hllong>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hlulong:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlulong>().HasValue ? this.Value<Hyperlight.Generated.hlulong>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hlfloat:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlfloat>().HasValue ? this.Value<Hyperlight.Generated.hlfloat>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hldouble:
        _o.Value.Value = this.Value<Hyperlight.Generated.hldouble>().HasValue ? this.Value<Hyperlight.Generated.hldouble>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hlstring:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlstring>().HasValue ? this.Value<Hyperlight.Generated.hlstring>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hlbool:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlbool>().HasValue ? this.Value<Hyperlight.Generated.hlbool>().Value.UnPack() : null;
        break;
      case Hyperlight.Generated.ParameterValue.hlvecbytes:
        _o.Value.Value = this.Value<Hyperlight.Generated.hlvecbytes>().HasValue ? this.Value<Hyperlight.Generated.hlvecbytes>().Value.UnPack() : null;
        break;
    }
  }
  public static Offset<Hyperlight.Generated.Parameter> Pack(FlatBufferBuilder builder, ParameterT _o) {
    if (_o == null) return default(Offset<Hyperlight.Generated.Parameter>);
    var _value_type = _o.Value == null ? Hyperlight.Generated.ParameterValue.NONE : _o.Value.Type;
    var _value = _o.Value == null ? 0 : Hyperlight.Generated.ParameterValueUnion.Pack(builder, _o.Value);
    return CreateParameter(
      builder,
      _value_type,
      _value);
  }
}

public class ParameterT
{
  public Hyperlight.Generated.ParameterValueUnion Value { get; set; }

  public ParameterT() {
    this.Value = null;
  }
}


static public class ParameterVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ValueType*/, 1 /*Hyperlight.Generated.ParameterValue*/, 1, false)
      && verifier.VerifyUnion(tablePos, 4, 6 /*Value*/, Hyperlight.Generated.ParameterValueVerify.Verify, true)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
