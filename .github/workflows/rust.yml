name: Rust Tests and Lints

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
     matrix:
        build: [ubuntu-20.04-debug, windows-latest-debug, linux-kvm-debug, linux-hyperv-debug, ubuntu-20.04-release, windows-latest-release, linux-kvm-release, linux-hyperv-release]
        include:
          - build: ubuntu-20.04-debug
            os: ubuntu-20.04
            hypervisor: none
            config: debug
          - build: windows-latest-debug
            os: windows-latest
            hypervisor: none
            config: debug
          - build: linux-kvm-debug
            os: [self-hosted, Linux, X64, kvm]
            hypervisor: kvm
            config: debug
          - build: linux-hyperv-debug
            os: [self-hosted, Linux, X64, hyperv]
            hypervisor: hyperv
            config: debug
          - build: ubuntu-20.04-release
            os: ubuntu-20.04
            hypervisor: none
            config: release
          - build: windows-latest-release
            os: windows-latest
            hypervisor: none
            config: release
          - build: linux-kvm-release
            os: [self-hosted, Linux, X64, kvm]
            hypervisor: kvm
            config: release
          - build: linux-hyperv-release
            os: [self-hosted, Linux, X64, hyperv]
            hypervisor: hyperv
            config: release
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          profile: default
      - uses: Swatinem/rust-cache@v2
      - name: fmt
        run: cargo fmt --all -- --check
      - name: clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Install Just
        uses: extractions/setup-just@v1
        with:
          just-version: 1.4 # optional semver specification, otherwise latest
      - name: Build
        working-directory: src/hyperlight_host
        run:  just build ${{ matrix.config }}
      - name: Set up env vars for tests
        if: ${{ (matrix.hypervisor == 'hyperv') && (runner.os == 'Linux') }}
        run: |
          echo "HYPERV_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
          echo "SHOULD_HAVE_STABLE_API=false" >> $GITHUB_ENV
      - name: Run Rust tests
        working-directory: src/hyperlight_host
        run: just build-test-rust ${{ matrix.config }}
      - name: Cache munit
        uses: actions/cache@v3
        with:
          path: src/hyperlight_hosts/tests_capi/munit
          key: munit
      - name: Set up munit
        working-directory: src/hyperlight_host/tests_capi
        if: steps.cache-munit.outputs.cache-hit != true
        run: |
          git submodule init
          git submodule update
      - name: Run C Tests (Windows only)
        working-directory: src/hyperlight_host
        if: runner.os == 'Windows'
        run: |
          echo "testdata:"
          ls testdata
          just run-tests-capi
      # Script to install Valgrind does not work on Mariner , or on the kvm runner valgrind has been installed manually on the runners.
      - name: Install Valgrind (Linux only - not hyperv)
        if: ${{ (matrix.hypervisor != 'hyperv') && (matrix.hypervisor != 'kvm') && (runner.os == 'Linux') }}
        run: ./install_valgrind.sh
        working-directory: ./scripts
      - name: Valgrind C tests (Linux only)
        working-directory: src/hyperlight_host
        if: runner.os == 'Linux'
        run: just valgrind-tests-capi
