# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Rust Tests and Lints

# See README.md in this directory for more information about workflow_call
on:
  workflow_call:
  
env:
  CARGO_TERM_COLOR: always

jobs:
  # this job requires the build-guest-binaries job be complete prior to 
  # its execution. this dependency should be expressed in the dependent
  # workflow
  build:
    strategy:
      fail-fast: true
      matrix:
        build: [windows-2022-debug, linux-kvm-debug, linux-hyperv-debug, windows-2022-release, linux-kvm-release, linux-hyperv-release]
        include:
          - build: windows-2022-debug
            os: [self-hosted, Windows, X64, "1ES.Pool=HL-Windows-2022"]
            hypervisor: none
            config: debug
          - build: linux-kvm-debug
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-Ubuntu-20.04-KVM"]
            hypervisor: kvm
            config: debug
          - build: linux-hyperv-debug
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-CBLMariner-mshv"]
            hypervisor: hyperv
            config: debug
          - build: windows-2022-release
            os: [self-hosted, Windows, X64, "1ES.Pool=HL-Windows-2022"]
            hypervisor: none
            config: release
          - build: linux-kvm-release
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-Ubuntu-20.04-KVM"]
            hypervisor: kvm
            config: release
          - build: linux-hyperv-release
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-CBLMariner-mshv"]
            hypervisor: hyperv
            config: release
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Add msbuild to PATH
        if: ${{ (runner.os == 'Windows') }}  
        uses: microsoft/setup-msbuild@v1.3
        with:
          msbuild-architecture: x64
      # This is required to build hyperlight_host on Windows and needs to run before clippy
      - name: Build Solution
        if: ${{ (runner.os == 'Windows') }}  
        run: msbuild -m hyperlight.sln -target:HyperlightSurrogate:Rebuild /p:Configuration=${{ matrix.config }} /p:ContinuousIntegrationBuild=true
        shell: pwsh
      - uses: dtolnay/rust-toolchain@1.71.0
        with:
          components: clippy, rustfmt
      - name: Install Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          just-version: '1.5.0' # optional semver specification, otherwise latest
      - name: fmt
        run: cargo fmt --all -- --check
      - name: clippy
        run: just clippy ${{ matrix.config }}
      - name: Enable WHP on Windows
        if: ${{ (runner.os == 'Windows')}}
        run: Enable-WindowsOptionalFeature -Online -FeatureName HyperVisorPlatform
        shell: pwsh
      - name: Get gh action service name
        if: ${{ (runner.os == 'Windows' )}}
        run: (Get-Service actions.runner.*) | Foreach { $_.Name, $_.UserName, $_.ServiceType }
        shell: pwsh

      # Rust tests require the test binaries (simpleguest.exe, dummyguest.exe, 
      # etc...) to be in ./src/tests/Hyperlight.Tests/bin/{Release or Debug}/net6.0.
      # 
      # We have a dependency on the 'build-guest-binaries' job, which builds 
      # them and uploads them using the upload-artifact step. we're downloading
      # them here, then moving them to the right location in the subsequent step
      - name: Download Guest Binaries
        uses: actions/download-artifact@v3
        with:
          name: guest-binaries-${{ matrix.config }}
          path: ./src/tests/Hyperlight.Tests/bin/${{ matrix.config }}/net6.0
      - name: Copy Guest Binaries
        run: |
          echo "copying guest binaries for build config ${{ matrix.config }}"
          cp ./dummyguest/x64/${{ matrix.config }}/dummyguest.exe dummyguest.exe
          cp ./simpleguest/x64/${{ matrix.config }}/simpleguest.exe simpleguest.exe
          cp ./callbackguest/x64/${{ matrix.config }}/callbackguest.exe callbackguest.exe
        working-directory: ./src/tests/Hyperlight.Tests/bin/${{ matrix.config }}/net6.0
      - name: Display Guest Binaries
        run: |
          ls -R ./src/tests/Hyperlight.Tests/bin/${{ matrix.config }}/net6.0
      - name: Build
        run:  just build-rust ${{ matrix.config }}
      - name: Set up env vars for hyperv-linux tests
        if: ${{ (matrix.hypervisor == 'hyperv') && (runner.os == 'Linux') }}
        run: |
          echo "HYPERV_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
          echo "HYPERV_SHOULD_HAVE_STABLE_API=false" >> $GITHUB_ENV
          ls -al /dev/mshv
          whoami
      - name: Set up env vars for kvm-linux tests
        if: ${{ (matrix.hypervisor == 'kvm') && (runner.os == 'Linux') }}
        run: |
          sudo ls -al /dev/kvm
          sudo chgrp $(whoami) /dev/kvm
          sudo ls -al /dev/kvm
          echo "KVM_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
      - name: Set up env vars for windows tests
        if: ${{ (runner.os == 'Windows') }}
        run: |
          echo "RUST_BACKTRACE=1" >> $GITHUB_ENV
      - name: Run Rust tests
        env:
          CARGO_TERM_COLOR: always
        run: just test-rust ${{ matrix.config }}
      - name: Set up munit
        working-directory: src/hyperlight_capi/tests_capi
        run: |
          git submodule init
          git submodule update
      - name: Run C Tests 
        working-directory: src/hyperlight_capi
        run: |
          just run-tests-capi  ${{ matrix.config }}

