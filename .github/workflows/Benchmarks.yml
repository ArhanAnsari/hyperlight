# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Benchmarks

on:
  workflow_call: # This is called from CreateRelease.yml
    secrets:
      ADO_CARGO_RO_PAT:
        required: true

jobs:
  build-guest-binaries:
    uses: ./.github/workflows/dep_build_guest_binaries.yml

  benchmark:
    needs: [build-guest-binaries]
    strategy:
      fail-fast: true
      matrix:
        build: [windows-2022-release, linux-kvm-release, linux-hyperv-release]
        include:
          - build: windows-2022-release
            os: [self-hosted, Windows, X64, "1ES.Pool=HL-Windows-2022"]
            hypervisor: none
          - build: linux-kvm-release
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-Ubuntu-20.04-KVM"]
            hypervisor: kvm
          - build: linux-hyperv-release
            os: [self-hosted, Linux, X64, "1ES.Pool=HL-CBLMariner-mshv"]
            hypervisor: hyperv

    runs-on: ${{ matrix.os }}
    steps:
      ### Setup ###

      - uses: actions/checkout@v4

      - uses: ./.github/actions/hyperlight-workflows-setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT: ${{ secrets.ADO_CARGO_RO_PAT }}

      - name: Enable WHP on Windows
        if: ${{ (runner.os == 'Windows')}}
        run: Enable-WindowsOptionalFeature -Online -FeatureName HyperVisorPlatform
        shell: pwsh

      - name: Download Guest Binaries
        uses: actions/download-artifact@v3
        with:
          name: guest-binaries-release
          path: ./downloaded-guest-binaries-release

      - name: Copy Guest Binaries
        run: |
          cp ./downloaded-guest-binaries-release/callbackguest.exe ./src/tests/rust_guests/bin/release/callbackguest.exe
          cp ./downloaded-guest-binaries-release/simpleguest.exe ./src/tests/rust_guests/bin/release/simpleguest.exe
          cp ./downloaded-guest-binaries-release/dummyguest.exe ./src/tests/rust_guests/bin/release/dummyguest.exe

      - name: Set up env vars for hyperv-linux tests
        if: ${{ (matrix.hypervisor == 'hyperv') && (runner.os == 'Linux') }}
        run: |
          echo "HYPERV_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
          echo "HYPERV_SHOULD_HAVE_STABLE_API=false" >> $GITHUB_ENV

      - name: Set up env vars for kvm-linux tests
        if: ${{ (matrix.hypervisor == 'kvm') && (runner.os == 'Linux') }}
        run: |
          sudo chgrp $(whoami) /dev/kvm
          echo "KVM_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV

      ### Benchmarks ###
      - name: Install github-cli (Linux mariner)
        if: runner.os == 'Linux' && matrix.hypervisor == 'hyperv'
        run: sudo dnf install gh -y

      - name: Install github-cli (Linux ubuntu)
        if: runner.os == 'Linux' && matrix.hypervisor == 'kvm'
        run: sudo apt install gh -y

      - name: Fetch tags
        run: git fetch --tags origin

      - name: Download benchmarks from most recent release
        run: just bench-download ${{ runner.os }} ${{ matrix.hypervisor }}
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Benchmarks
        run: just bench-ci dev release

      - uses: actions/upload-artifact@v3
        with:
          name: benchmarks_${{runner.os}}_${{matrix.hypervisor}}
          path: ./target/criterion/
          if-no-files-found: error
