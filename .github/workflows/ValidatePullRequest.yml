# TODO: When Github Actions allows Reusable Workflows with strategies then move build test to a reuasble workflow.
# https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations

name: Validate Pull Request

on:
  pull_request:
    branches: [ main ]
  
jobs:
  build-on-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        build: [ windows-debug, windows-release]
        include:
          - build: windows-debug
            os: [self-hosted, Windows, X64, whp]
            config: Debug
            platform: x64
          - build: windows-release
            os: [self-hosted, Windows, X64, whp]
            config: Release
            platform: x64
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: | 
          6.0.x 
    - name: Restore
      run: dotnet restore
      shell: pwsh
    - name: Set MINVERBUILDMETADATA
      run:  echo "MINVERBUILDMETADATA=$(git rev-parse --short ${{ github.sha }})" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
    - name: Build Solution
      run: msbuild hyperlight.sln /p:Configuration=${{ matrix.config }} /p:Platform=${{ matrix.platform }} /p:ContinuousIntegrationBuild=true
      shell: pwsh
    - name: Test
      shell: pwsh
      run: dotnet test -c ${{ matrix.config }} --logger "console;verbosity=detailed" --blame
      working-directory: src/tests/Hyperlight.Tests
    - name: Build Example
      shell: pwsh
      run: dotnet build -c ${{ matrix.config }}
      working-directory: src/examples/NativeHost
    - name: Run Example
      shell: pwsh
      run:  dotnet run -c ${{ matrix.config }} -- -nowait
      working-directory: src/examples/NativeHost
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: guest-binaries-${{ matrix.config }}
        path: src\tests\Guests\*\${{ matrix.platform }}\${{ matrix.config }}\*['.exe', '.pdb', !'.recipe']
  build-on-linux:
    needs: [ build-on-windows ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        build: [ linux-debug, linux-release]
        include:
          - build: linux-debug
            os: [self-hosted, Linux, X64, kvm]
            config: Debug
            platform: x64
          - build: linux-release
            os: [self-hosted, Linux, X64, kvm]
            config: Release
            platform: x64
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
          6.0.x 
    - name: Restore
      run: dotnet restore
      shell: bash
    - name: Set MINVERBUILDMETADATA
      run:  echo "MINVERBUILDMETADATA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV 
      shell: bash
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: guest-binaries-${{ matrix.config }}
        path: src/tests/Guests/
    - name: Build Hyperlight
      shell: bash
      run: dotnet build -c ${{ matrix.config }}
      working-directory: src/Hyperlight
    - name: Build Example
      shell: bash
      run: dotnet build -c ${{ matrix.config }}
      working-directory: src/examples/NativeHost
    - name: Run Example
      shell: bash
      run:  dotnet run -c ${{ matrix.config }} -- -nowait
      working-directory: src/examples/NativeHost
    - name: Test
      shell: bash
      run: dotnet test -c ${{ matrix.config }} --logger "console;verbosity=detailed" --blame
      working-directory: src/tests/Hyperlight.Tests