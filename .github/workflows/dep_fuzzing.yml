name: Fuzzing Job

on:
  workflow_call:
    inputs:
      max_total_time:
        description: Maximum total time for the fuzz run in seconds
        required: true
        type: number

jobs:
  build-guest-binaries:
    uses: ./.github/workflows/dep_build_guest_binaries.yml
    secrets: inherit

  fuzz:
    needs: [build-guest-binaries]
    runs-on: [self-hosted, Linux, X64, "1ES.Pool=HL-Ubuntu-20.04-KVM"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2    
        
      - name: Setup
        uses: ./.github/actions/hyperlight-workflows-setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PAT: ${{ secrets.ADO_CARGO_RO_PAT }}

      - name: Set up env vars for kvm
        run: |
          sudo chgrp $(whoami) /dev/kvm
          echo "KVM_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV          
            
      - name: Set up Rust (w/ Nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Pin specific nightly version (nightly-2023-11-28-x86_64-unknown-linux-gnu)
        run: |
          rustup toolchain install nightly-2023-11-28-x86_64-unknown-linux-gnu

      - name: Download Guest Binaries
        uses: actions/download-artifact@v3
        with:
          name: guest-binaries-release
          path: ./downloaded-guest-binaries-release

      - name: Copy Guest Binaries
        run: |
          cp ./downloaded-guest-binaries-release/callbackguest.exe ./src/tests/rust_guests/bin/release/callbackguest.exe
          cp ./downloaded-guest-binaries-release/simpleguest.exe ./src/tests/rust_guests/bin/release/simpleguest.exe
          cp ./downloaded-guest-binaries-release/dummyguest.exe ./src/tests/rust_guests/bin/release/dummyguest.exe          

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Run Fuzzing
        run: cargo +nightly-2023-11-28-x86_64-unknown-linux-gnu fuzz run --release fuzz_target_1 -- -max_total_time=${{ inputs.max_total_time }}
        working-directory: src/hyperlight_host

      - name: Upload Crash Artifacts
        if: failure() # This ensures artifacts are only uploaded on failure
        uses: actions/upload-artifact@v3
        with:
          name: fuzz-crash-artifacts
          path: src/hyperlight_host/fuzz/artifacts/
