name: Fuzzing Job

on:
  workflow_call:
    inputs:
      max_total_time:
        description: Maximum total time for the fuzz run in seconds
        required: true
        type: number
      environment:
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  # this job requires the build-guest-binaries job be complete prior to
  # its execution. this dependency should be expressed in the dependent
  # workflow
  fuzz:
    environment: ${{ inputs.environment }}
    runs-on: [self-hosted, Linux, X64, "1ES.Pool=HL-Ubuntu-20.04-KVM"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4    

      - uses: deislabs/hyperlight-workflow-setup@v1.3.0
        with:
          rust-toolchain: "1.74.0"
          azure-client-id: ${{ secrets.ADO_HYPERLIGHT_CARGO_RO_AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Rust (w/ Nightly)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Pin specific nightly version (nightly-2023-11-28-x86_64-unknown-linux-gnu)
        run: |
          rustup toolchain install nightly-2023-11-28-x86_64-unknown-linux-gnu

      - name: Download Guest Binaries
        uses: actions/download-artifact@v3
        with:
          name: guest-binaries-release
          path: ./downloaded-guest-binaries-release

      - name: Copy Guest Binaries
        run: |
          cp ./downloaded-guest-binaries-release/callbackguest.exe ./src/tests/rust_guests/bin/release/callbackguest.exe
          cp ./downloaded-guest-binaries-release/simpleguest.exe ./src/tests/rust_guests/bin/release/simpleguest.exe
          cp ./downloaded-guest-binaries-release/dummyguest.exe ./src/tests/rust_guests/bin/release/dummyguest.exe          

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: Run Fuzzing
        run: cargo +nightly-2023-11-28-x86_64-unknown-linux-gnu fuzz run --release fuzz_target_1 -- -max_total_time=${{ inputs.max_total_time }}
        working-directory: src/hyperlight_host

      - name: Upload Crash Artifacts
        if: failure() # This ensures artifacts are only uploaded on failure
        uses: actions/upload-artifact@v3
        with:
          name: fuzz-crash-artifacts
          path: src/hyperlight_host/fuzz/artifacts/
