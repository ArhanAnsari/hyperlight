# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish crates to intenral cargo registry

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Optional - version to publish (ex: v0.3.5). If not set version will be taken from branch name'
        required: false

jobs:
  publish-hyperlight-packages:
    runs-on: ubuntu-latest
    if:  ${{ contains(github.ref, 'refs/heads/release/') }} 
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/hyperlight-workflows-setup
        env:
          PAT: ${{ secrets.ADO_CARGO_RW_PAT }}
      - name: set up cargo workspaces version
        run: |
          cargo install cargo-workspaces
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.Name "${{ github.actor }}"
      - name: set versions from input
        if: ${{ github.event.inputs.version != ''}}
        run: |
          version=$(echo ${{ github.event.inputs.version }} | cut -d"v" -f2-)
          echo "version=$version"
          cargo +nightly ws version --force=hyperlight_* --no-git-tag --no-git-push --allow-branch=release/* --yes custom $version
      - name: set versions from branch name
        if: ${{ github.event.inputs.version == ''}}
        run: |
          gh_ref=${{ github.ref }}
          version=$(echo ${gh_ref##*/} | cut -d"v" -f2)
          echo "version=$version"
          cargo +nightly ws version --force=hyperlight_* --no-git-tag --no-git-push --allow-branch=release/* --yes custom $version
      - name: Publish hyperlight-testing
        run: cargo +nightly publish --manifest-path ./src/hyperlight_testing/Cargo.toml --registry hyperlight_packages
      - name: Publish hyperlight-host 
        run: cargo +nightly publish --manifest-path ./src/hyperlight_host/Cargo.toml --registry hyperlight_packages
      - name: Publish hyperlight-capi
        # --no-verify is needed because the build.rs script generates ./include/hyperlight_capi.h 
        # and cargo does not want you to modify files outside of OUT_DIR
        run: cargo +nightly publish --manifest-path ./src/hyperlight_capi/Cargo.toml --registry hyperlight_packages --no-verify


