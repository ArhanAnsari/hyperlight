name: Valgrind tests (Linux only)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        build: [ubuntu-20.04-debug, linux-kvm-debug, linux-hyperv-debug, ubuntu-20.04-release, linux-kvm-release, linux-hyperv-release]
        include:
          - build: ubuntu-20.04-debug
            os: ubuntu-20.04
            hypervisor: none
            config: debug
          - build: linux-kvm-debug
            os: [self-hosted, Linux, X64, kvm2]
            hypervisor: kvm
            config: debug
          - build: linux-hyperv-debug
            os: [self-hosted, Linux, X64, hyperv-nov82022]
            hypervisor: hyperv
            config: debug
          - build: ubuntu-20.04-release
            os: ubuntu-20.04
            hypervisor: none
            config: release
          - build: linux-kvm-release
            os: [self-hosted, Linux, X64, kvm2]
            hypervisor: kvm
            config: release
          - build: linux-hyperv-release
            os: [self-hosted, Linux, X64, hyperv-nov82022]
            hypervisor: hyperv
            config: release
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.66.1
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Install Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          just-version: '1.5.0' # optional semver specification, otherwise latest
      - name: Set up env vars for hyperv-linux tests
        if: ${{ (matrix.hypervisor == 'hyperv') }}
        run: |
          echo "HYPERV_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
          echo "SHOULD_HAVE_STABLE_API=false" >> $GITHUB_ENV
      - name: Set up env vars for kvm-linux tests
        if: ${{ (matrix.hypervisor == 'kvm') }}
        run: |
          echo "KVM_SHOULD_BE_PRESENT=true" >> $GITHUB_ENV
      - name: Set up munit
        working-directory: src/hyperlight_host/tests_capi
        run: |
          git submodule init
          git submodule update
      # Script to install Valgrind does not work on Mariner or on the kvm 
      # runner. Valgrind has been installed manually on the runners.
      - name: Install Valgrind (Not on hyperv)
        if: ${{ (matrix.hypervisor != 'hyperv') && (matrix.hypervisor != 'kvm') }}
        run: ./install_valgrind.sh
        working-directory: ./scripts
      - name: Install cargo-valgrind
        run: cargo install cargo-valgrind
      - name: Valgrind Rust tests
        run: cargo valgrind test
      - name: Valgrind C tests
        working-directory: src/hyperlight_host
        run: just valgrind-tests-capi  ${{ matrix.config }}

