# yaml-language-server: $schema=https://json.schemastore.org/github-action.json

name: "Hyperlight Workflow Setup"
description: "Common setup steps for GitHub workflows in the Hyperlight project"

runs:
  using: composite
  steps:
    - uses: dtolnay/rust-toolchain@1.74.0
      with:
        components: clippy, rustfmt
    - uses: extractions/setup-just@v1
      with:
        just-version: "1.25.2" # optional semver specification, otherwise latest

    ### Linux setup ###
    - name: Cargo login
      if: ${{ (runner.os == 'Linux') }}
      run: just cargo-login-ci
      shell: bash

    # Install clang-tools on Linux

    - name: Install clang-tools (Linux mariner)
      if: ${{ (runner.os == 'Linux' && matrix.hypervisor == 'hyperv') }}
      run: |
        sudo dnf remove clang -y|| true
        sudo dnf remove lld -y|| true
        sudo dnf install clang16 -y
        sudo dnf install clang16-tools-extra -y
        sudo dnf install lld16 -y
      shell: bash

    - name: Install clang-tools (Linux ubuntu)
      # Assume ubuntu if not running as part of a matrix so cargo publishing package workflows will work
      if: ${{ (runner.os == 'Linux' && matrix.hypervisor != 'hyperv') }}
      run: |
        wget https://apt.llvm.org/llvm.sh 
        chmod +x ./llvm.sh
        sudo ./llvm.sh 16 all
        sudo ln -s /usr/lib/llvm-16/bin/clang-cl /usr/bin/clang-cl
        sudo ln -s /usr/lib/llvm-16/bin/llvm-lib /usr/bin/llvm-lib
        sudo ln -s /usr/lib/llvm-16/bin/lld-link /usr/bin/lld-link
        sudo ln -s /usr/lib/llvm-16/bin/llvm-ml /usr/bin/llvm-ml
      shell: bash

    # This is needed to build the rust guests
    - name: Install x86_64-pc-windows-msvc target
      if: ${{ (runner.os == 'Linux') }}
      run: |
        rustup target add x86_64-pc-windows-msvc
      shell: bash

    ### Windows setup ###
    - name: Cargo login
      if: ${{ (runner.os == 'Windows') }}
      run: just cargo-login-ci-windows
      shell: pwsh

    - name: Install x86_64-pc-windows-msvc target
      if: ${{ (runner.os == 'Windows') }}
      run: |
        rustup target add x86_64-pc-windows-msvc
      shell: pwsh
